name: Flutter Release (Android + iOS TrollStore)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to rebuild (e.g. v1.0.0)'
        required: true
        type: string

jobs:
  build:
    runs-on: macos-latest

    steps:
      # 1Ô∏è‚É£ Checkout
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Flutter
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      # 3Ô∏è‚É£ Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      # 4Ô∏è‚É£ Generate Code (Freezed, JSON serializable, etc.)
      - name: Run Build Runner
        run: flutter pub run build_runner build --delete-conflicting-outputs

      # 5Ô∏è‚É£ Determine Version
      - name: Determine Version
        id: meta
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            RELEASE_TAG="${{ inputs.tag }}"
          else
            RELEASE_TAG="${{ github.ref_name }}"
          fi
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          VERSION_NAME="${RELEASE_TAG#v}"
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV
          echo "Using version $VERSION_NAME"

      ###################################
      # ‚úÖ ANDROID BUILD
      ###################################
      - name: Build Android (Release APKs)
        run: flutter build apk --release --build-name "$VERSION_NAME"

      # üîç List generated APKs for debugging
      - name: List Generated APKs
        run: ls -lh build/app/outputs/flutter-apk/

      # ‚úÖ Upload all APK variants (arm64, v7a, x86_64, etc.)
      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: jyotigpt-android-apks
          path: build/app/outputs/flutter-apk/*.apk

      ###################################
      # ‚úÖ IOS BUILD (UNSIGNED / TROLLSTORE)
      ###################################
      - name: Build iOS (Unsigned)
        run: flutter build ios --release --no-codesign --build-name "$VERSION_NAME"

      - name: Package Unsigned IPA
        run: |
          cd build/ios/iphoneos
          mkdir -p Payload
          cp -r Runner.app Payload/
          zip -r app.ipa Payload
        shell: bash

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jyotigpt-ios-unsigned
          path: build/ios/iphoneos/app.ipa

      ###################################
      # ‚úÖ GITHUB RELEASE (UPLOADS ALL)
      ###################################
      - name: Upload to GitHub Release
        if: github.event_name == 'push'
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            build/app/outputs/flutter-apk/*.apk
            build/ios/iphoneos/app.ipa
          tag: ${{ env.RELEASE_TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
